install.packages(c("backports", "broom", "dbplyr", "dplyr", "ellipsis", "fs", "ggplot2", "glue", "haven", "htmltools", "isoband", "jsonlite", "knitr", "later", "lubridate", "modelr", "openssl", "pillar", "pkgbuild", "pkgload", "processx", "promises", "Rcpp", "rlang", "rmarkdown", "scales", "tibble", "tidyr", "tidyselect", "tinytex", "vctrs", "xfun"))
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(ggthemes)
library(zoo)
install.packages("plotly")
install.packages("lubridate")
install.packages("tidyverse")
library(ggthemes)
library(lubridate)
library(ggthemes)
library(lubridate)
library(askpass)
detach("package:askpass", unload = TRUE)
library(plotly)
detach("package:ggplot2", unload = TRUE)
detach("package:plotly", unload = TRUE)
library(plotly)
library(lubridate)
a<--1 #at lim->2 it becomes MSE at 1 becomes MAE
c<-0.1
x<-seq(-3,3,0.01)
part1<-(abs(a-2)/a)
part2<-(((x/c)^2)/abs(a-2))+1
power<-a/2
general_function<-part1*((part2^power)-1)
plot<-data.frame(x)
plot$loss_function<-general_function
#plot$loss_by_error<-diff(general_function)
gg1<-ggplot(data = plot)+geom_line(aes(x=x,y=loss_function),color="blue4")
grad_part1<-(a/2)*(abs(a-2)/a)
grad_part2<-(((x/c)^2)/abs(a-2))+1
grad_part3<-(2*x)/((c^2)*abs(a-2))
grad_power<-(a/2)-1
gradient<-grad_part1*(grad_part2^grad_power)*grad_part3
plot$gradient<-gradient
gg2<-ggplot(data = plot)+geom_line(aes(x=x,y=gradient),color="green4")
library(gridExtra)
grid.arrange(gg1,gg2, ncol=2)
library(tidyverse)
a<--1 #at lim->2 it becomes MSE at 1 becomes MAE
c<-0.1
x<-seq(-3,3,0.01)
part1<-(abs(a-2)/a)
part2<-(((x/c)^2)/abs(a-2))+1
power<-a/2
general_function<-part1*((part2^power)-1)
plot<-data.frame(x)
plot$loss_function<-general_function
#plot$loss_by_error<-diff(general_function)
gg1<-ggplot(data = plot)+geom_line(aes(x=x,y=loss_function),color="blue4")
grad_part1<-(a/2)*(abs(a-2)/a)
grad_part2<-(((x/c)^2)/abs(a-2))+1
grad_part3<-(2*x)/((c^2)*abs(a-2))
grad_power<-(a/2)-1
gradient<-grad_part1*(grad_part2^grad_power)*grad_part3
plot$gradient<-gradient
gg2<-ggplot(data = plot)+geom_line(aes(x=x,y=gradient),color="green4")
library(gridExtra)
grid.arrange(gg1,gg2, ncol=2)
c<-0.8
library(tidyverse)
a<--1 #at lim->2 it becomes MSE at 1 becomes MAE
c<-0.8
x<-seq(-3,3,0.01)
part1<-(abs(a-2)/a)
part2<-(((x/c)^2)/abs(a-2))+1
power<-a/2
general_function<-part1*((part2^power)-1)
plot<-data.frame(x)
plot$loss_function<-general_function
#plot$loss_by_error<-diff(general_function)
gg1<-ggplot(data = plot)+geom_line(aes(x=x,y=loss_function),color="blue4")
grad_part1<-(a/2)*(abs(a-2)/a)
grad_part2<-(((x/c)^2)/abs(a-2))+1
grad_part3<-(2*x)/((c^2)*abs(a-2))
grad_power<-(a/2)-1
gradient<-grad_part1*(grad_part2^grad_power)*grad_part3
plot$gradient<-gradient
gg2<-ggplot(data = plot)+geom_line(aes(x=x,y=gradient),color="green4")
library(gridExtra)
grid.arrange(gg1,gg2, ncol=2)
library(tidyverse)
a<-1.99999999 #at lim->2 it becomes MSE at 1 becomes MAE
c<-0.8
x<-seq(-3,3,0.01)
part1<-(abs(a-2)/a)
part2<-(((x/c)^2)/abs(a-2))+1
power<-a/2
general_function<-part1*((part2^power)-1)
plot<-data.frame(x)
plot$loss_function<-general_function
#plot$loss_by_error<-diff(general_function)
gg1<-ggplot(data = plot)+geom_line(aes(x=x,y=loss_function),color="blue4")
grad_part1<-(a/2)*(abs(a-2)/a)
grad_part2<-(((x/c)^2)/abs(a-2))+1
grad_part3<-(2*x)/((c^2)*abs(a-2))
grad_power<-(a/2)-1
gradient<-grad_part1*(grad_part2^grad_power)*grad_part3
plot$gradient<-gradient
gg2<-ggplot(data = plot)+geom_line(aes(x=x,y=gradient),color="green4")
library(gridExtra)
grid.arrange(gg1,gg2, ncol=2)
library(tidyverse)
a<--1 #at lim->2 it becomes MSE at 1 becomes MAE
c<-0.8
x<-seq(-3,3,0.01)
part1<-(abs(a-2)/a)
part2<-(((x/c)^2)/abs(a-2))+1
power<-a/2
general_function<-part1*((part2^power)-1)
plot<-data.frame(x)
plot$loss_function<-general_function
#plot$loss_by_error<-diff(general_function)
gg1<-ggplot(data = plot)+geom_line(aes(x=x,y=loss_function),color="blue4")
grad_part1<-(a/2)*(abs(a-2)/a)
grad_part2<-(((x/c)^2)/abs(a-2))+1
grad_part3<-(2*x)/((c^2)*abs(a-2))
grad_power<-(a/2)-1
gradient<-grad_part1*(grad_part2^grad_power)*grad_part3
plot$gradient<-gradient
gg2<-ggplot(data = plot)+geom_line(aes(x=x,y=gradient),color="green4")
library(gridExtra)
grid.arrange(gg1,gg2, ncol=2)
library(ggthemes)
library(lubridate)
library(ggthemes)
remove.packages("ggthemes", lib="~/R/win-library/4.0")
install.packages('ggthemes')
library(ggthemes)
remove.packages("rlang")
install.packages("https://cran.r-project.org/src/contrib/Archive/rlang/rlang_0.4.9.tar.gz", repo=NULL, type="source") # for specific rlang version, in this case 0.4.9. For latest version can run install.packages("rlang")
remove.packages("ggthemes", lib="~/R/win-library/4.0")
install.packages('ggthemes')
library(ggthemes)
library(ggthemes)
install.packages("pillar")
library(plotly)
gc()
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room3_WoodShop.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
Datafull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
library(plotly)
ggplotly(gg5,dynamicTicks = TRUE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
Datafull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Datafull_filtered)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
gg5
gg4
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
Datafull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
Datafull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
library(plotly)
ggplotly(gg5,dynamicTicks = TRUE)
gc()
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Roomcsv",header=TRUE)
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull_filtered)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull_filtered)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
library(plotly)
ggplotly(gg5,dynamicTicks = TRUE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,15], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull$Bosch1Raw<-as.numeric(DataFull$Bosch1Raw)
DataFull$Bosch2Raw<-as.numeric(DataFull$Bosch2Raw)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = DataFull_filtered)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
library(plotly)
ggplotly(gg5,dynamicTicks = TRUE)
p<-ggplotly(gg5,dynamicTicks = TRUE)
htmlwidgets::saveWidget(as_widget(p), "paintroom.html")
detach("package:purrr", unload = TRUE)
library(purrr)
rmarkdown::find_pandoc(version = "2.9.1")
install.packages("rmarkdown")
rmarkdown::find_pandoc()
