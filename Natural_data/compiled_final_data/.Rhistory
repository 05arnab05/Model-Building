ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.1)
View(y)
library(tidyverse)
Population = data.frame(matrix(ncol = 1, nrow = 1000))
colnames(Population) <- c('Weight')
y <- rnorm(1000, mean = 75, sd = 2.0)
Population$Weight<-y
ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.1)
ggplot(Population, aes(Weight)) + geom_histogram(breaks=50)
ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.5)
ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.2)
#confidence interval
alpha <- 0.05
lo <- qnorm(alpha/2,   mean=75, sd=2)  # lower CI bound
hi <- qnorm(1-alpha/2, mean=75, sd=2)  # upper CI bound
x_lo<-which(Population$Weight==lo)
View(Population)
gg1<-ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.01)
gg1
gg1<-ggplot(Population, aes(Weight)) + geom_histogram(binwidth=0.05)
gg1
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,13], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
library(plotly)
p<-ggplotly(gg5,dynamicTicks = TRUE)
p
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,13], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp=paste(DataFull$Date,' ',DataFull$Time)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull[,13], format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
View(DataFull_filtered)
View(DataFull_filtered)
View(DataFull)
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
View(DataFull)
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
View(DataFull)
View(DataFull)
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
library(plotly)
p<-ggplotly(gg5,dynamicTicks = TRUE)
p
library(ggplot2)
library(ggthemes)
library(lubridate)
library(tidyverse)
library(plotly)
library(zoo)
library(xts)
library(dplyr)
library(plyr)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room3_WoodShop.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room3_WoodShop.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room3_WoodShop.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
p<-ggplotly(gg5,dynamicTicks = TRUE)
p
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room4_ME310_room.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
p<-ggplotly(gg5,dynamicTicks = TRUE)
p
View(Compiled_data)
#+guides(color = guide_legend(reverse = TRUE))
write.csv(Compiled_data,"Per_minute_Compiled_data_Room4_ME310.csv", row.names = FALSE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room3_WoodShop.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
gg5
View(DataFull)
#+guides(color = guide_legend(reverse = TRUE))
write.csv(Compiled_data,"Per_minute_Compiled_data_Woodshop.csv", row.names = FALSE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room2_Paint_Room.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
write.csv(Compiled_data,"Per_minute_Compiled_data_paintshop.csv", row.names = FALSE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d/%m/%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/")
DataFull<-read.csv("Room1_Underground_storage.csv",header=TRUE)
DataFull$timestamp<-paste(DataFull$Date, " ", DataFull$Time)
DataFull$timestamp=as.POSIXct(DataFull$timestamp, format = "%d-%m-%Y %H:%M:%S",origin="1970-01-01")
DataFull$Gasera<-as.numeric(DataFull$Gasera)
DataFull$SGP30<-as.numeric(DataFull$SGP30)
DataFull$Winsen1<-as.numeric(DataFull$Winsen1)
DataFull$Winsen2<-as.numeric(DataFull$Winsen2)
DataFull$Bosch1_Temperature<-as.numeric(DataFull$Bosch1_Temperature)
DataFull$Bosch2_Temperature<-as.numeric(DataFull$Bosch2_Temperature)
DataFull$Bosch1_RH<-as.numeric(DataFull$Bosch1_RH)
DataFull$Bosch2_RH<-as.numeric(DataFull$Bosch2_RH)
#DataFull$absolute_Humidity<-as.numeric(DataFull$absolute_Humidity)
DataFull_filtered<-filter(DataFull, Gasera < 100& Gasera>0)
#Averaging per minute
DataFull_filtered$minute <- cut(DataFull_filtered$timestamp, breaks = "1 min")
average_sensor<-aggregate(DataFull_filtered$SGP30 ~ minute, DataFull_filtered, mean)
average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
average_sensor_Bosch1<-aggregate(DataFull_filtered$Bosch1 ~ minute, DataFull_filtered, mean)
average_sensor_Bosch2<-aggregate(DataFull_filtered$Bosch2 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen1<-aggregate(DataFull_filtered$Winsen1 ~ minute, DataFull_filtered, mean)
average_sensor_Winsen2<-aggregate(DataFull_filtered$Winsen2 ~ minute, DataFull_filtered, mean)
average_sensor_Gasera<-aggregate(DataFull_filtered$Gasera ~ minute, DataFull_filtered, mean)
#average_sensor<- setNames(average_sensor, c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera'))
#average_sensor$timestamp=as.POSIXct(average_sensor[,1], format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
Compiled_data = data.frame(matrix(ncol = 7, nrow = nrow(average_sensor)))
colnames(Compiled_data) <- c('timestamp','SGP30','Bosch1','Bosch2','Winsen1','Winsen2','Gasera')
for (i in seq(1,nrow(average_sensor),1)) {
Compiled_data$timestamp[i]<-format((average_sensor$timestamp[i]),usetz = FALSE)
Compiled_data$SGP30[i]<-average_sensor$`DataFull_filtered$SGP30`[i]
Compiled_data$Bosch1[i]<-average_sensor_Bosch1$`DataFull_filtered$Bosch1`[i]
Compiled_data$Bosch2[i]<-average_sensor_Bosch2$`DataFull_filtered$Bosch2`[i]
Compiled_data$Winsen1[i]<-average_sensor_Winsen1$`DataFull_filtered$Winsen1`[i]
Compiled_data$Winsen2[i]<-average_sensor_Winsen2$`DataFull_filtered$Winsen2`[i]
Compiled_data$Gasera[i]<-average_sensor_Gasera$`DataFull_filtered$Gasera`[i]
}
Compiled_data$timestamp=as.POSIXct(Compiled_data$timestamp, format = "%Y-%m-%d %H:%M:%S",origin="1970-01-01")
ggplot(data =Compiled_data)+geom_line(aes(x=timestamp,y=Gasera,color="red"),size=1)
#DataFull$Gasera<-DataFull$Gasera*1000
gg1<-ggplot(data = Compiled_data)+theme_bw()+geom_line(aes(x=timestamp,y=Gasera,color="Reference sensor"),size=1)+geom_line(aes(x=timestamp,y=SGP30,color="SGP30"),size=0.8)
gg2<-gg1+geom_line(aes(x=timestamp,y=Winsen1,color="ZE08-CH20 unit 1"))+geom_line(aes(x=timestamp,y=Winsen2,color="ZE08-CH20 unit 2"),size=0.8)
gg3<-gg2
gg4<-gg3+ylab("Measured Formaldehyde concentration (ppb)")+xlab("Time")
gg5<-gg4+theme(legend.position = "right",axis.title=element_text(size=14,face="bold"),legend.text=element_text(size=14),legend.justification = c(0, 1),plot.subtitle = element_text(hjust = 0.5),plot.title = element_text(hjust = 0.5),axis.text.x = element_text(size=13),axis.text.y = element_text(size=13))+scale_color_manual(breaks = c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),values = c("Reference sensor"="red","SGP30"="blue","BME680 unit 1"="orange","BME680 unit 2"="orange3","ZE08-CH20 unit 1"="limegreen","ZE08-CH20 unit 2"="green4"),labels=c("Reference sensor","SGP30","BME680 unit 1","BME680 unit 2","ZE08-CH20 unit 1","ZE08-CH20 unit 2"),name="")+theme(plot.title = element_text(hjust = 0.5))
gg5
#+guides(color = guide_legend(reverse = TRUE))
write.csv(Compiled_data,"Per_minute_Compiled_data_underground_storage.csv", row.names = FALSE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/compiled_final_data")
DataFull<-read.csv("Per_minute_Compiled_data_paintshop.csv",header=TRUE)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/compiled_final_data")
DataFull<-read.csv("Per_minute_Compiled_data_paintshop.csv",header=TRUE)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/compiled_final_data")
DataFull<-read.csv("Per_minute_Compiled_data_Room4_ME310.csv",header=TRUE)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/compiled_final_data")
DataFull<-read.csv("Per_minute_Compiled_data_underground_storage.csv",header=TRUE)
View(DataFull)
setwd("C:/Users/arnab/Documents/GitHub/Model-Building/Natural_Data/compiled_final_data")
DataFull<-read.csv("Per_minute_Compiled_data_Woodshop.csv",header=TRUE)
View(DataFull)
